plugins {
	id 'org.quiltmc.loom' version '1.6.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.21'
	id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.21'
	id("com.google.devtools.ksp") version "1.9.21-1.0.15"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name = "Curseforge"
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
    maven {
		name = "Nucleoid"
        url "https://maven.nucleoid.xyz/"
    }
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
	maven {
		name = "JitPack"
		url = "https://jitpack.io"
	}
	mavenLocal()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:intermediary-v2"
	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"

	// QSL
	modImplementation "org.quiltmc:qsl:${qsl_version}+${minecraft_version}"
	modImplementation("org.quiltmc.quilted-fabric-api:quilted-fabric-api:${qfapi_version}-${minecraft_version}") {
		exclude(group: "org.quiltmc.qsl")
	}

	// QKL
	modImplementation("org.quiltmc.quilt-kotlin-libraries:quilt-kotlin-libraries:3.0.0+kt.1.9.22+flk.1.10.17") {
		exclude(group: "org.quiltmc.qsl")
	}

	// Hooky
	implementation(project("Hooky"))
	ksp(project("Hooky"))

	// Cardinal components base
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}") {
		exclude(group: "net.fabricmc")
		exclude(group: "net.fabricmc.fabric-api")
	}
	include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}") {
		exclude(group: "net.fabricmc")
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Cardinal components entity
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}") {
		exclude(group: "net.fabricmc")
		exclude(group: "net.fabricmc.fabric-api")
	}
	include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}") {
		exclude(group: "net.fabricmc")
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Translations
	modImplementation("xyz.nucleoid:server-translations-api:2.1.0+1.20.2-rc2") {
		exclude(group: "net.fabricmc")
		exclude(group: "net.fabricmc.fabric-api")
	}
	include("xyz.nucleoid:server-translations-api:2.1.0+1.20.2-rc2") {
		exclude(group: "net.fabricmc")
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("quilt.mod.json") {
		expand "version": project.version
	}
}

jar {
	from "LICENSE"
}

allprojects {
	tasks.withType(JavaCompile).configureEach {
		options.encoding = "UTF-8"

		it.options.release.set(17)
	}
}

kotlin {
	jvmToolchain(17)
	sourceSets {
		main.kotlin.srcDirs += 'build/generated/ksp/main/kotlin'
		test.kotlin.srcDirs += 'build/generated/ksp/test/kotlin'
	}
}